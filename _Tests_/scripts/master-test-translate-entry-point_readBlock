Parsed 5 instruction(s).
Starting from an empty flash

%TARMProcessor = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i1, i1, i1, i1, i1, i1, i1, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %TLog*, %TMemory* }
%TLog = type opaque
%TMemory = type opaque

define private i8* @i0(%TARMProcessor*, i1*, i32) {
"prologue#0":
  %3 = getelementptr %TARMProcessor* %0, i64 0, i32 53
  %4 = load %TMemory** %3, align 8
  %5 = getelementptr %TARMProcessor* %0, i64 0, i32 0
  %6 = load i32* %5, align 4
  %7 = getelementptr %TARMProcessor* %0, i64 0, i32 1
  %8 = load i32* %7, align 4
  %9 = getelementptr %TARMProcessor* %0, i64 0, i32 4
  %10 = load i32* %9, align 4
  %11 = getelementptr %TARMProcessor* %0, i64 0, i32 5
  %12 = load i32* %11, align 4
  %13 = getelementptr %TARMProcessor* %0, i64 0, i32 6
  %14 = load i32* %13, align 4
  %15 = getelementptr %TARMProcessor* %0, i64 0, i32 7
  %16 = load i32* %15, align 4
  %17 = getelementptr %TARMProcessor* %0, i64 0, i32 8
  %18 = load i32* %17, align 4
  %19 = getelementptr %TARMProcessor* %0, i64 0, i32 9
  %20 = load i32* %19, align 4
  %21 = getelementptr %TARMProcessor* %0, i64 0, i32 18
  %22 = load i1* %21, align 1
  switch i32 %2, label %"mainexit#1" [
    i32 0, label %"_#5"
    i32 3, label %"_#53"
    i32 4, label %"_#54"
  ]

"mainexit#1":                                     ; preds = %"prologue#0"
  store i32 %6, i32* %5, align 4
  store i32 %8, i32* %7, align 4
  store i32 %10, i32* %9, align 4
  store i32 %12, i32* %11, align 4
  store i32 %14, i32* %13, align 4
  store i32 %16, i32* %15, align 4
  store i32 %18, i32* %17, align 4
  store i32 %20, i32* %19, align 4
  %23 = getelementptr %TARMProcessor* %0, i64 0, i32 15
  store i32 undef, i32* %23, align 4
  store i1 %22, i1* %21, align 1
  ret i8* bitcast (i8* (%TARMProcessor*, i1*)* @JIT_Continue to i8*)

"_#5":                                            ; preds = %"prologue#0"
  %24 = alloca [6 x i32], align 4
  %.sub5 = getelementptr inbounds [6 x i32]* %24, i64 0, i64 0
  store i32 0, i32* %.sub5
  %25 = getelementptr i32* %.sub5, i32 1
  store i32 0, i32* %25
  %26 = getelementptr i32* %.sub5, i32 2
  store i32 0, i32* %26
  %27 = getelementptr i32* %.sub5, i32 3
  store i32 0, i32* %27
  %28 = getelementptr i32* %.sub5, i32 4
  store i32 0, i32* %28
  %29 = getelementptr i32* %.sub5, i32 5
  store i32 0, i32* %29
  br label %"_#53"

"_#53":                                           ; preds = %"prologue#0", %"_#5"
  %30 = phi i32 [ %8, %"prologue#0" ], [ 44, %"_#5" ]
  %31 = phi i32 [ %20, %"prologue#0" ], [ 0, %"_#5" ]
  %32 = phi i32 [ %18, %"prologue#0" ], [ 0, %"_#5" ]
  %33 = phi i32 [ %16, %"prologue#0" ], [ 0, %"_#5" ]
  %34 = phi i32 [ %14, %"prologue#0" ], [ 0, %"_#5" ]
  %35 = phi i32 [ %12, %"prologue#0" ], [ 0, %"_#5" ]
  %36 = phi i32 [ %10, %"prologue#0" ], [ 0, %"_#5" ]
  %37 = phi i32 [ %6, %"prologue#0" ], [ 67108864, %"_#5" ]
  %38 = alloca [6 x i32], align 4
  %.sub = getelementptr inbounds [6 x i32]* %38, i64 0, i64 0
  store i32 %36, i32* %.sub, align 4
  %39 = getelementptr [6 x i32]* %38, i64 0, i64 1
  store i32 %35, i32* %39, align 4
  %40 = getelementptr [6 x i32]* %38, i64 0, i64 2
  store i32 %34, i32* %40, align 4
  %41 = getelementptr [6 x i32]* %38, i64 0, i64 3
  store i32 %33, i32* %41, align 4
  %42 = getelementptr [6 x i32]* %38, i64 0, i64 4
  store i32 %32, i32* %42, align 4
  %43 = getelementptr [6 x i32]* %38, i64 0, i64 5
  store i32 %31, i32* %43, align 4
  %44 = call i1 @JIT_WriteBlock(%TMemory* %4, i32 %37, i32 6, i32* %.sub)
  br i1 %44, label %"dataabort#29", label %"_#54"

"dataabort#29":                                   ; preds = %"_#53"
  store i32 %37, i32* %5, align 4
  store i32 %30, i32* %7, align 4
  store i32 %36, i32* %9, align 4
  store i32 %35, i32* %11, align 4
  store i32 %34, i32* %13, align 4
  store i32 %33, i32* %15, align 4
  store i32 %32, i32* %17, align 4
  store i32 %31, i32* %19, align 4
  %45 = getelementptr %TARMProcessor* %0, i64 0, i32 15
  store i32 20, i32* %45, align 4
  store i1 %22, i1* %21, align 1
  %46 = call i8* @JIT_DataAbort(%TARMProcessor* %0, i1* %1)
  ret i8* %46

"_#54":                                           ; preds = %"_#53", %"prologue#0"
  %47 = phi i32 [ %20, %"prologue#0" ], [ %31, %"_#53" ]
  %48 = phi i32 [ %18, %"prologue#0" ], [ %32, %"_#53" ]
  %49 = phi i32 [ %16, %"prologue#0" ], [ %33, %"_#53" ]
  %50 = phi i32 [ %14, %"prologue#0" ], [ %34, %"_#53" ]
  %51 = phi i32 [ %12, %"prologue#0" ], [ %35, %"_#53" ]
  %52 = phi i32 [ %10, %"prologue#0" ], [ %36, %"_#53" ]
  %53 = phi i32 [ %8, %"prologue#0" ], [ %30, %"_#53" ]
  %54 = phi i32 [ %6, %"prologue#0" ], [ %37, %"_#53" ]
  store i32 %54, i32* %5, align 4
  store i32 %53, i32* %7, align 4
  store i32 %52, i32* %9, align 4
  store i32 %51, i32* %11, align 4
  store i32 %50, i32* %13, align 4
  store i32 %49, i32* %15, align 4
  store i32 %48, i32* %17, align 4
  store i32 %47, i32* %19, align 4
  %55 = getelementptr %TARMProcessor* %0, i64 0, i32 15
  store i32 24, i32* %55, align 4
  store i1 %22, i1* %21, align 1
  %56 = call i8* @JIT_Breakpoint(%TARMProcessor* %0, i1* %1)
  ret i8* %56
}

; Function Attrs: nounwind
declare i8* @JIT_Continue(%TARMProcessor*, i1*) #0

define i8* @"00000000@00000000_00000000"(%TARMProcessor*, i1*) {
"_#6":
  %2 = alloca [6 x i32], align 4
  %.sub = getelementptr inbounds [6 x i32]* %2, i64 0, i64 0
  %savedstack = tail call i8* @llvm.stacksave()
  %3 = bitcast [6 x i32]* %2 to i8*
  call void @llvm.lifetime.start(i64 -1, i8* %3)
  %4 = getelementptr %TARMProcessor* %0, i64 0, i32 53
  %5 = load %TMemory** %4, align 8
  %6 = getelementptr %TARMProcessor* %0, i64 0, i32 0
  %7 = getelementptr %TARMProcessor* %0, i64 0, i32 1
  %8 = getelementptr %TARMProcessor* %0, i64 0, i32 4
  %9 = getelementptr %TARMProcessor* %0, i64 0, i32 5
  %10 = getelementptr %TARMProcessor* %0, i64 0, i32 6
  %11 = getelementptr %TARMProcessor* %0, i64 0, i32 7
  %12 = getelementptr %TARMProcessor* %0, i64 0, i32 8
  %13 = getelementptr %TARMProcessor* %0, i64 0, i32 9
  %14 = getelementptr %TARMProcessor* %0, i64 0, i32 18
  %15 = load i1* %14, align 1
  store i32 0, i32* %.sub
  %16 = getelementptr i32* %.sub, i32 1
  store i32 0, i32* %16
  %17 = getelementptr i32* %.sub, i32 2
  store i32 0, i32* %17
  %18 = getelementptr i32* %.sub, i32 3
  store i32 0, i32* %18
  %19 = getelementptr i32* %.sub, i32 4
  store i32 0, i32* %19
  %20 = getelementptr i32* %.sub, i32 5
  store i32 0, i32* %20
  %21 = alloca [6 x i32], align 4
  %.sub1 = getelementptr inbounds [6 x i32]* %21, i64 0, i64 0
  store i32 0, i32* %.sub1, align 4
  %22 = getelementptr [6 x i32]* %21, i64 0, i64 1
  store i32 0, i32* %22, align 4
  %23 = getelementptr [6 x i32]* %21, i64 0, i64 2
  store i32 0, i32* %23, align 4
  %24 = getelementptr [6 x i32]* %21, i64 0, i64 3
  store i32 0, i32* %24, align 4
  %25 = getelementptr [6 x i32]* %21, i64 0, i64 4
  store i32 0, i32* %25, align 4
  %26 = getelementptr [6 x i32]* %21, i64 0, i64 5
  store i32 0, i32* %26, align 4
  %27 = call i1 @JIT_WriteBlock(%TMemory* %5, i32 67108864, i32 6, i32* %.sub1)
  store i32 67108864, i32* %6, align 4
  store i32 44, i32* %7, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  store i32 0, i32* %13, align 4
  %28 = getelementptr %TARMProcessor* %0, i64 0, i32 15
  br i1 %27, label %"dataabort#29.i", label %"_#30.i"

"dataabort#29.i":                                 ; preds = %"_#6"
  store i32 20, i32* %28, align 4
  store i1 %15, i1* %14, align 1
  %29 = call i8* @JIT_DataAbort(%TARMProcessor* %0, i1* %1)
  call void @llvm.lifetime.end(i64 -1, i8* %3)
  call void @llvm.stackrestore(i8* %savedstack)
  br label %i0.exit

"_#30.i":                                         ; preds = %"_#6"
  store i32 24, i32* %28, align 4
  store i1 %15, i1* %14, align 1
  %30 = call i8* @JIT_Breakpoint(%TARMProcessor* %0, i1* %1)
  call void @llvm.lifetime.end(i64 -1, i8* %3)
  call void @llvm.stackrestore(i8* %savedstack)
  br label %i0.exit

i0.exit:                                          ; preds = %"_#30.i", %"dataabort#29.i"
  %31 = phi i8* [ %29, %"dataabort#29.i" ], [ %30, %"_#30.i" ]
  ret i8* %31
}

; Function Attrs: nounwind readnone
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #1

; Function Attrs: nounwind
declare i1 @JIT_ReadBlock(%TMemory*, i32, i32, i32*) #0

define i8* @"00000000@00000000_0000000C"(%TARMProcessor*, i1*) {
"_#6":
  %2 = tail call i8* @i0(%TARMProcessor* %0, i1* %1, i32 3)
  ret i8* %2
}

; Function Attrs: nounwind
declare i8* @JIT_DataAbort(%TARMProcessor*, i1*) #0

; Function Attrs: nounwind readonly
declare i1 @JIT_WriteBlock(%TMemory*, i32, i32, i32*) #2

define i8* @"00000000@00000000_00000010"(%TARMProcessor*, i1*) {
"_#6":
  %2 = tail call i8* @i0(%TARMProcessor* %0, i1* %1, i32 4)
  ret i8* %2
}

; Function Attrs: nounwind
declare i8* @JIT_Breakpoint(%TARMProcessor*, i1*) #0

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #0

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #0

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #0

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #0

attributes #0 = { nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readonly }

